{"version":3,"file":"static/js/852.1f9e6022.chunk.js","mappings":"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","sources":["webpack://s-quest-2/./src/pages/Test/Test.module.css?9afc","webpack://s-quest-2/./src/components/Answer/Answer.module.css?de19","components/Answer/Answer.jsx","webpack://s-quest-2/./src/components/AnswerList/AnswerList.module.css?cb5c","webpack://s-quest-2/./src/components/UI/NextQuestionBtn/NextQuestionBtn.module.css?14d0","components/UI/icons/RightArrowIcon.jsx","components/UI/NextQuestionBtn/NextQuestionBtn.jsx","components/AnswerList/AnswerList.jsx","hooks/useNextQuestion.js","webpack://s-quest-2/./src/components/Question/Question.module.css?0626","components/Question/Question.jsx","webpack://s-quest-2/./src/components/UI/ProgressLine/ProgressLine.module.css?1fd4","components/UI/ProgressLine/ProgressLine.jsx","pages/Test/Test.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"testPage\":\"Test_testPage__f3S+p\",\"content\":\"Test_content__-CZql\",\"testName\":\"Test_testName__o759W\"};","// extracted by mini-css-extract-plugin\nexport default {\"answer\":\"Answer_answer__QQOcC\",\"answerRadio\":\"Answer_answerRadio__1ry79\",\"answerText\":\"Answer_answerText__6S9ya\"};","import React, { memo } from \"react\";\r\nimport styles from \"./Answer.module.css\";\r\n\r\nconst Answer = memo(({ answer, id, value, setSelectedAnswerIndex }) => {\r\n\r\n   return (\r\n      <div className={styles.answer}>\r\n         <input\r\n            className={styles.answerRadio}\r\n            type=\"radio\"\r\n            id={id}\r\n            name=\"answer\"\r\n            value={value}\r\n            onClick={(e) => setSelectedAnswerIndex(e.target.value)}\r\n         />\r\n         <label\r\n            className={styles.answerText}\r\n            htmlFor={id}\r\n         >\r\n            {answer}\r\n         </label>\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default Answer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"controls\":\"AnswerList_controls__oX1r-\",\"answersList\":\"AnswerList_answersList__2yXy0\"};","// extracted by mini-css-extract-plugin\nexport default {\"nextQuestionBtn\":\"NextQuestionBtn_nextQuestionBtn__6QKiS\"};","import React, { memo } from \"react\";\r\n\r\nconst RightArrowIcon = memo(() => {\r\n   return (\r\n      <svg\r\n         viewBox=\"0 0 42 74\"\r\n         fill=\"black\"\r\n         xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n         <path\r\n            d=\"M25.6692 36.888L0.0351562 9.14326L7.83682 0.699203L41.2725 36.888L7.83682 73.0768L0.0351562 64.6328L25.6692 36.888Z\" \r\n         />\r\n      </svg>\r\n   );\r\n});\r\n\r\nexport default RightArrowIcon;\r\n","import React from \"react\";\r\nimport styles from './NextQuestionBtn.module.css'\r\nimport RightArrowIcon from \"../icons/RightArrowIcon\";\r\n\r\nconst NextQuestionBtn = ({onNextQuestionClick, selectedAnswerIndex}) => {\r\n   const isAnswerSelected = !selectedAnswerIndex;\r\n   return (\r\n      <button\r\n         type=\"button\"\r\n         className={styles.nextQuestionBtn}\r\n         onClick={onNextQuestionClick}\r\n         disabled={isAnswerSelected}\r\n      >\r\n         <RightArrowIcon />\r\n      </button>\r\n   );\r\n};\r\n\r\nexport default NextQuestionBtn;\r\n","import React  from \"react\";\r\nimport Answer from \"../Answer/Answer\";\r\nimport styles from \"./AnswerList.module.css\";\r\nimport NextQuestionBtn from \"../UI/NextQuestionBtn/NextQuestionBtn\";\r\nimport useNextQuestion from \"./../../hooks/useNextQuestion\";\r\n\r\nconst AnswerList = (props) => {\r\n   const { answers, questionAmount, currentQuestionIndex, correctAnswerIndex } = props;\r\n\r\n   const { selectedAnswerIndex, setSelectedAnswerIndex, onNextQuestionClick } =\r\n      useNextQuestion(currentQuestionIndex, questionAmount, correctAnswerIndex);\r\n\r\n   return (\r\n      <form className={styles.controls}>\r\n         <div className={styles.answersList}>\r\n            {answers.map((answer, i) => (\r\n               <Answer\r\n                  key={answer + i + currentQuestionIndex}\r\n                  answer={answer}\r\n                  id={i + currentQuestionIndex}\r\n                  value={i}\r\n                  setSelectedAnswerIndex={setSelectedAnswerIndex}\r\n               />\r\n            ))}\r\n         </div>\r\n         <NextQuestionBtn\r\n            onNextQuestionClick={onNextQuestionClick}\r\n            selectedAnswerIndex={selectedAnswerIndex}\r\n         />\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default AnswerList;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n   addToCurrentResult,\r\n   addToResults,\r\n   nextQuestion,\r\n} from \"../store/slices/testSlice\";\r\n\r\nexport default function useNextQuestion(currentQuestionIndex, questionAmount, correctAnswerIndex) {\r\n   const dispatch = useDispatch();\r\n   const navigate = useNavigate();\r\n\r\n   const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null);\r\n\r\n   function onNextQuestionClick() {\r\n      if (currentQuestionIndex >= questionAmount - 1) {\r\n         dispatch(\r\n            addToCurrentResult({ selectedAnswerIndex, correctAnswerIndex })\r\n         );\r\n         dispatch(addToResults());\r\n         navigate(`result`);\r\n         return;\r\n      }\r\n\r\n      dispatch(addToCurrentResult({ selectedAnswerIndex, correctAnswerIndex }));\r\n      dispatch(nextQuestion({ selectedAnswerIndex }));\r\n      setSelectedAnswerIndex(null);\r\n   }\r\n\r\n   return {\r\n      onNextQuestionClick,\r\n      selectedAnswerIndex,\r\n      setSelectedAnswerIndex,\r\n   };\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"question\":\"Question_question__0nk1D\",\"questionTitle\":\"Question_questionTitle__iOS4h\"};","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AnswerList from \"../AnswerList/AnswerList\";\r\nimport styles from \"./Question.module.css\";\r\n\r\nconst Question = ({ test }) => {\r\n   const currentQuestionIndex = useSelector(\r\n      (state) => state.test.currentQuestionIndex\r\n   );\r\n\r\n   const currentQuestion = test.questions[currentQuestionIndex];\r\n\r\n   return (\r\n      <section className={styles.question}>\r\n         <h2 className={styles.questionTitle}>{currentQuestion.title}</h2>\r\n\r\n         <AnswerList\r\n            testId={test.id}\r\n            answers={currentQuestion.answers}\r\n            questionAmount={test.questions.length}\r\n            currentQuestionIndex={currentQuestionIndex}\r\n            correctAnswerIndex={currentQuestion.correctAnswer}\r\n         />\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Question;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"progressWrap\":\"ProgressLine_progressWrap__6mQZO\",\"progressInfo\":\"ProgressLine_progressInfo__TDJ2B\",\"progressLine\":\"ProgressLine_progressLine__-GqJr\"};","import React from \"react\";\r\nimport styles from \"./ProgressLine.module.css\";\r\n\r\nconst ProgressLine = (props) => {\r\n   const { questionNumber, questionAmount } = props;\r\n\r\n   return (\r\n      <div className={styles.progressWrap}>\r\n         <label className={styles.progressInfo} htmlFor=\"test-progress\">\r\n            <span>{questionNumber}</span>\r\n            <span>/</span>\r\n            <span>{questionAmount} </span>\r\n         </label>\r\n         <progress\r\n            className={styles.progressLine}\r\n            id=\"test-progress\"\r\n            value={questionNumber}\r\n            max={questionAmount}\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ProgressLine;\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styles from \"./Test.module.css\";\r\nimport Question from \"../../components/Question/Question\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProgressLine from \"../../components/UI/ProgressLine/ProgressLine\";\r\nimport {clearCurrentTestState, setCurrentTest} from \"../../store/slices/testSlice\";\r\nimport { testAPI } from \"../../services/TestService\";\r\n\r\nconst Test = () => {\r\n   let { id } = useParams();\r\n   id = +id;\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const {data: test, error, isLoading} = testAPI.useFetchTestQuery(id)\r\n\r\n   const currentQuestionIndex = useSelector(\r\n      (state) => state.test.currentQuestionIndex\r\n   );\r\n\r\n   useEffect(() => {\r\n      dispatch(clearCurrentTestState())\r\n      dispatch(setCurrentTest(test));\r\n   }, [test]);\r\n\r\n   return (\r\n      isLoading ? (<p>Loading</p>) :\r\n      <main className={styles.testPage}>\r\n         <div className={[styles.content, \"wrapper\"].join(\" \")}>\r\n            <h1 className={styles.testName}>{test.name}</h1>\r\n\r\n            <Question test={test} />\r\n\r\n            <ProgressLine\r\n               questionNumber={currentQuestionIndex + 1}\r\n               questionAmount={test.questions.length}\r\n            />\r\n         </div>\r\n      </main>\r\n   );\r\n};\r\n\r\nexport default Test;\r\n"],"names":["memo","_ref","answer","id","value","setSelectedAnswerIndex","_jsxs","className","styles","children","_jsx","type","name","onClick","e","target","htmlFor","viewBox","fill","xmlns","d","onNextQuestionClick","selectedAnswerIndex","isAnswerSelected","disabled","RightArrowIcon","props","answers","questionAmount","currentQuestionIndex","correctAnswerIndex","dispatch","useDispatch","navigate","useNavigate","useState","addToCurrentResult","addToResults","nextQuestion","useNextQuestion","map","i","Answer","NextQuestionBtn","test","useSelector","state","currentQuestion","questions","title","AnswerList","testId","length","correctAnswer","questionNumber","max","Test","useParams","data","error","isLoading","testAPI","useFetchTestQuery","useEffect","clearCurrentTestState","setCurrentTest","testPage","content","join","testName","Question","ProgressLine"],"sourceRoot":""}