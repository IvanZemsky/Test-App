{"version":3,"file":"static/js/120.02076057.chunk.js","mappings":"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","sources":["webpack://s-quest-2/./src/components/UI/TestCard/TestCard.module.css?d744","components/UI/TestCard/TestCard.jsx","webpack://s-quest-2/./src/pages/Tests/Tests.module.css?4230","webpack://s-quest-2/./src/components/TestsSearch/TestsSearch.module.css?ae60","components/TestsSearch/TestsSearch.jsx","components/EmptyTests/EmptyTests.jsx","webpack://s-quest-2/./src/components/CategoryList/CategoryList.module.css?f9b9","webpack://s-quest-2/./src/components/Category/Category.module.css?eb34","components/Category/Category.jsx","components/UI/icons/SquaresIcon.jsx","webpack://s-quest-2/./src/components/UI/AllCategoriesBtn/AllCategoriesBtn.module.css?d5bc","components/UI/AllCategoriesBtn/AllCategoriesBtn.jsx","components/CategoryList/CategoryList.jsx","pages/Tests/Tests.jsx","hooks/useFilter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"testCardBorder\":\"TestCard_testCardBorder__TWVGp\",\"testCard\":\"TestCard_testCard__T4N1m\",\"imgWrap\":\"TestCard_imgWrap__Fa5iL\",\"testImg\":\"TestCard_testImg__SsxJ5\",\"name\":\"TestCard_name__enVoe\",\"desc\":\"TestCard_desc__eYPc7\",\"startBtn\":\"TestCard_startBtn__vdjli\"};","import React, { memo } from \"react\";\r\nimport styles from \"./TestCard.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TestCard = memo(({ test }) => {\r\n   const { id, name, desc, cover } = test;\r\n\r\n   return (\r\n      <div className={styles.testCardBorder}>\r\n         <div className={styles.testCard}>\r\n            <div className={styles.imgWrap}>\r\n               <img\r\n                  className={styles.testImg}\r\n                  src={cover}\r\n                  alt={`Cover of the test: ${name}`}\r\n               />\r\n            </div>\r\n            <div className={styles.info}>\r\n               <h2 className={styles.name}>{name}</h2>\r\n               <p className={styles.desc}>{desc}</p>\r\n            </div>\r\n\r\n            <Link\r\n               className={styles.startBtn}\r\n               to={`/tests/${id}`}\r\n            >\r\n               Начать\r\n            </Link>\r\n         </div>\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default TestCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"testCards\":\"Tests_testCards__bYhlD\",\"testsContent\":\"Tests_testsContent__u5LrQ\",\"panel\":\"Tests_panel__7AE3L\"};","// extracted by mini-css-extract-plugin\nexport default {\"testsSearch\":\"TestsSearch_testsSearch__lf5+8\"};","import React from \"react\";\r\nimport styles from \"./TestsSearch.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSearchText } from \"../../store/slices/filterSlice\";\r\n\r\nconst TestsSearch = ({ searchInputValue, setSearchInputValue }) => {\r\n   const dispatch = useDispatch();\r\n\r\n   const searchText = useSelector(state => state.filter.filters.searchText)\r\n\r\n   return (\r\n      <input\r\n         type=\"text\"\r\n         className={styles.testsSearch}\r\n         placeholder=\"Поиск\"\r\n         onChange={(event) =>\r\n            dispatch(setSearchText((event.target.value)))\r\n         }\r\n         value={searchText}\r\n      />\r\n   );\r\n};\r\n\r\nexport default TestsSearch;\r\n","import React from 'react'\r\n\r\nconst EmptyTests = () => {\r\n  return (\r\n    <div>\r\n      Ничего не найдено {\":(\"}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmptyTests\r\n","// extracted by mini-css-extract-plugin\nexport default {\"categories\":\"CategoryList_categories__lurC7\"};","// extracted by mini-css-extract-plugin\nexport default {\"categoryText\":\"Category_categoryText__dn2Zq\",\"categoryRadio\":\"Category_categoryRadio__jjO74\",\"category\":\"Category_category__yy3QZ\"};","import React from \"react\";\r\nimport styles from \"./Category.module.css\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCategory } from \"../../store/slices/filterSlice\";\r\n\r\nconst Category = ({category}) => {\r\n   const dispatch = useDispatch();\r\n\r\n   const handleCategoryClick = (newCategory) => {\r\n      dispatch(setCategory(newCategory));\r\n   };\r\n\r\n   const isChecked = category.value === 'all' ? true : false;\r\n\r\n   return (\r\n      <div className={styles.category}>\r\n         <input\r\n            className={styles.categoryRadio}\r\n            type=\"radio\"\r\n            id={category.value}\r\n            name=\"category\"\r\n            value={category.value}\r\n            defaultChecked={isChecked}\r\n            onChange={() => handleCategoryClick(category.value)}\r\n         />\r\n         <label\r\n            className={styles.categoryText}\r\n            htmlFor={category.value}\r\n         >\r\n            {category.name}\r\n         </label>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Category;","import React from \"react\";\r\n\r\nexport default function SquaresIcon() {\r\n   return (\r\n      <svg\r\n         xmlns=\"http://www.w3.org/2000/svg\"\r\n         viewBox=\"0 0 16 16\"\r\n         width=\"40\"\r\n         hanging=\"40\"\r\n      >\r\n         <path\r\n            d=\"M3.5 2A1.5 1.5 0 0 0 2 3.5v2A1.5 1.5 0 0 0 3.5 7h2A1.5 1.5 0 0 0 7 5.5v-2A1.5 1.5 0 0 0 5.5 2zm0 7A1.5 1.5 0 0 0 2 10.5v2A1.5 1.5 0 0 0 3.5 14h2A1.5 1.5 0 0 0 7 12.5v-2A1.5 1.5 0 0 0 5.5 9zM9 3.5A1.5 1.5 0 0 1 10.5 2h2A1.5 1.5 0 0 1 14 3.5v2A1.5 1.5 0 0 1 12.5 7h-2A1.5 1.5 0 0 1 9 5.5zM10.5 9A1.5 1.5 0 0 0 9 10.5v2a1.5 1.5 0 0 0 1.5 1.5h2a1.5 1.5 0 0 0 1.5-1.5v-2A1.5 1.5 0 0 0 12.5 9z\"\r\n         ></path>\r\n      </svg>\r\n   );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"categoriesBtn\":\"AllCategoriesBtn_categoriesBtn__p0ita\"};","import React from 'react'\r\nimport SquaresIcon from './../icons/SquaresIcon';\r\nimport styles from './AllCategoriesBtn.module.css';\r\n\r\nconst AllCategoriesBtn = () => {\r\n  return (\r\n    <button className={styles.categoriesBtn}>\r\n      <SquaresIcon />\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default AllCategoriesBtn\r\n","import React from \"react\";\r\nimport styles from \"./CategoryList.module.css\";\r\nimport Category from \"../Category/Category\";\r\nimport AllCategoriesBtn from \"./../UI/AllCategoriesBtn/AllCategoriesBtn\";\r\n\r\nconst categories = [\r\n   { name: \"Все\", value: \"all\"},\r\n   { name: \"Программирование\", value: \"programming\", },\r\n   { name: \"Математика\", value: \"math\", },\r\n   { name: \"Языки\", value: \"languages\", },\r\n   { name: \"История\", value: \"history\", },\r\n];\r\n\r\nconst CategoryList = () => {\r\n   return (\r\n      <div className={styles.categories}>\r\n         \r\n         {categories.map((category) => (\r\n            <Category\r\n               key={category.value}\r\n               category={category}\r\n            />\r\n         ))}\r\n\r\n         <AllCategoriesBtn />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CategoryList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TestCard from \"../../components/UI/TestCard/TestCard\";\r\nimport styles from \"./Tests.module.css\";\r\nimport TestsSearch from \"../../components/TestsSearch/TestsSearch\";\r\nimport EmptyTests from \"../../components/EmptyTests/EmptyTests\";\r\nimport CategoryList from \"../../components/CategoryList/CategoryList\";\r\nimport useFilter from \"../../hooks/useFilter\";\r\n\r\nconst Tests = () => {\r\n\r\n   const {previews, error, isLoading} = useFilter();\r\n\r\n   return (\r\n      <main className={styles.tests}>\r\n         <div className={[styles.testsContent, \"wrapper\"].join(\" \")}>\r\n            <div className={styles.panel}>\r\n               <TestsSearch/>\r\n               <CategoryList/>\r\n            </div>\r\n\r\n            <div className={styles.testCards}>\r\n               {previews ? (\r\n                  previews.map((preview) => <TestCard key={preview.id} test={preview} />)\r\n               ) : (\r\n                  <EmptyTests />\r\n               )}\r\n            </div>\r\n         </div>\r\n      </main>\r\n   );\r\n};\r\n\r\nexport default Tests;\r\n","import { useSelector } from \"react-redux\";\r\nimport { testAPI } from \"../services/TestService\";\r\n\r\nexport default function useFilter() {\r\n   const category = useSelector(state => state.filter.filters.category);\r\n\r\n   let previews = [];\r\n\r\n   const { data: fetchedPreviews, error, isLoading } = testAPI.useFetchPreviewsByCategoryQuery(category);\r\n   previews = fetchedPreviews;\r\n\r\n   return {previews, error, isLoading}\r\n}"],"names":["memo","_ref","test","id","name","desc","cover","_jsx","className","styles","testCardBorder","children","_jsxs","testCard","imgWrap","testImg","src","alt","concat","info","Link","startBtn","to","searchInputValue","setSearchInputValue","dispatch","useDispatch","searchText","useSelector","state","filter","filters","type","placeholder","onChange","event","setSearchText","target","value","EmptyTests","category","isChecked","defaultChecked","handleCategoryClick","newCategory","setCategory","htmlFor","SquaresIcon","xmlns","viewBox","width","hanging","d","AllCategoriesBtn","categories","CategoryList","map","Category","Tests","previews","error","isLoading","data","fetchedPreviews","testAPI","useFetchPreviewsByCategoryQuery","useFilter","tests","testsContent","join","panel","TestsSearch","testCards","preview","TestCard"],"sourceRoot":""}